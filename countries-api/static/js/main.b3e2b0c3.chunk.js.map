{"version":3,"sources":["components/SearchResults.js","components/search.js","components/selectedcountry.js","App.js","index.js"],"names":["SearchResults","props","countries","searchString","react_default","a","createElement","className","map","country","key","name","react_router_dom","to","state","database","src","flags","png","alt","population","toString","replace","region","capital","Search","_useState","useState","_useState2","Object","slicedToArray","input","setInput","_useState3","_useState4","countryList","setCountryList","_useState5","_useState6","allCountries","setAllCountries","_useState7","_useState8","search","setSearch","_useState9","_useState10","setRegion","_useState11","_useState12","regionSwitch","setRegionSwitch","_useState13","_useState14","regionList","setRegionList","_useState15","_useState16","regionDeprecated","setRegionDeprecated","useEffect","Axios","get","then","response","data","filter","toLowerCase","includes","Fragment","class","onSubmit","e","preventDefault","type","value","onChange","event","target","placeholder","id","components_SearchResults","SelectedCountry","navigate","useNavigate","location","useLocation","index","findIndex","x","currencies","curr","languages","lang","borderCountryIndices","hasOwnProperty","borders","bc","alpha3Code","borderCountries","onClick","svg","nativeName","subRegion","topLevelDomain","join","each","App","react_router","path","element","src_components_search","exact","components_selectedcountry","ReactDOM","createRoot","document","getElementById","render","StrictMode","href","src_App_0"],"mappings":"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","file":"static/js/main.b3e2b0c3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SearchResults = (props) => {\r\n  let countries = props.searchString;\r\n\r\n  return (\r\n    <div className=\"card-grid\">\r\n      {countries.map((country) => {\r\n        return (\r\n          <div className=\"country-card\" key={country.name}>\r\n            <div className=\"flag-container\">\r\n              <Link\r\n                to=\"/selectedcountry\"\r\n                state={{ database: countries, name: country.name }}\r\n              >\r\n                <img\r\n                  src={country.flags.png}\r\n                  alt=\"flag\"\r\n                  className=\"flag-image\"\r\n                />\r\n              </Link>\r\n            </div>\r\n            <Link\r\n              to=\"/selectedcountry\"\r\n              state={{ database: countries, name: country.name }}\r\n            >\r\n              <div className=\"country-name\">\r\n                <h1>{country.name}</h1>\r\n              </div>\r\n            </Link>\r\n            <div className=\"country-details\">\r\n              <p className=\"population\">\r\n                <b>Population: </b>\r\n                {country.population\r\n                  .toString()\r\n                  .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n              </p>\r\n              <p className=\"region\">\r\n                <b>Region: </b>\r\n                {country.region}\r\n              </p>\r\n              <p className=\"capital\">\r\n                <b>Capital: </b>\r\n                {country.capital}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport SearchResults from \"./SearchResults\";\r\nimport \"./search.css\";\r\n\r\nconst Search = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [countryList, setCountryList] = useState([]);\r\n  const [allCountries, setAllCountries] = useState([]);\r\n  const [search, setSearch] = useState(false);\r\n  const [region, setRegion] = useState([\"Filter by Region\"]);\r\n  const [regionSwitch, setRegionSwitch] = useState([false]);\r\n  const [regionList, setRegionList] = useState({});\r\n  const [regionDeprecated, setRegionDeprecated] = useState({});\r\n\r\n  const handleChange = (event) => {\r\n    setInput(event.target.value);\r\n  };\r\n\r\n  //when no country is searched\r\n  useEffect(() => {\r\n    Axios.get(\"https://restcountries.com/v2/all\").then((response) => {\r\n      setAllCountries(response.data);\r\n    });\r\n  }, []);\r\n\r\n  //when a country is searched for\r\n  const getCountries = (e) => {\r\n    e.preventDefault();\r\n    input === \"\" ? setSearch(false) : setSearch(true);\r\n    Axios.get(\"https://restcountries.com/v2/all\").then((response) => {\r\n      setCountryList(\r\n        response.data.filter((country) => {\r\n          return country.name.toLowerCase().includes(input.toLowerCase());\r\n        })\r\n      );\r\n    });\r\n  };\r\n\r\n  //when no country is searched and region is selected\r\n  useEffect(() => {\r\n    Axios.get(\"https://restcountries.com/v2/all\").then((response) => {\r\n      setRegionList(\r\n        response.data.filter((country) => {\r\n          return country.region.toLowerCase().includes(region[0].toLowerCase());\r\n        })\r\n      );\r\n    });\r\n  }, [region]);\r\n\r\n  //when region is selected and country is searched\r\n  useEffect(() => {\r\n    Axios.get(\"https://restcountries.com/v2/all\").then((response) => {\r\n      setRegionDeprecated(\r\n        response.data\r\n          .filter((country) => {\r\n            return country.name.toLowerCase().includes(input.toLowerCase());\r\n          })\r\n          .filter((country) => {\r\n            return country.region\r\n              .toLowerCase()\r\n              .includes(region[0].toLowerCase());\r\n          })\r\n      );\r\n    });\r\n  }, [region, input]);\r\n\r\n  //when a region is selected\r\n  const regionSelect = (event) => {\r\n    setRegion([event.target.value]);\r\n    if (event.target.value === \"Filter by Region\") {\r\n      setRegionSwitch([false]);\r\n    } else {\r\n      setRegionSwitch([true]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className=\"search-header\">\r\n        <div className=\"search-container\">\r\n          <div className=\"search-image\">\r\n            <i class=\"fa-solid fa-magnifying-glass\"></i>\r\n          </div>\r\n          <form onSubmit={getCountries}>\r\n            <input\r\n              type=\"text\"\r\n              value={input}\r\n              onChange={handleChange}\r\n              placeholder=\"Search for a country...\"\r\n              className=\"search-box\"\r\n            ></input>\r\n          </form>\r\n        </div>\r\n        <div className=\"select-container\">\r\n          <select id=\"regions\" className=\"regions\" onChange={regionSelect}>\r\n            <option value=\"Filter by Region\">None</option>\r\n            <option value=\"Africa\">Africa</option>\r\n            <option value=\"Americas\">Americas</option>\r\n            <option value=\"Asia\">Asia</option>\r\n            <option value=\"Europe\">Europe</option>\r\n            <option value=\"Oceania\">Oceania</option>\r\n          </select>\r\n          <div className=\"dropdown-selected\">{region}</div>\r\n        </div>\r\n      </header>\r\n      {search === false && regionSwitch[0] === false ? (\r\n        <SearchResults searchString={allCountries} />\r\n      ) : null}\r\n      {search === true && regionSwitch[0] === false ? (\r\n        <SearchResults searchString={countryList} />\r\n      ) : null}\r\n      {search === false && regionSwitch[0] === true ? (\r\n        <SearchResults searchString={regionList} />\r\n      ) : null}\r\n      {search === true && regionSwitch[0] === true ? (\r\n        <SearchResults searchString={regionDeprecated} />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { useNavigate, useLocation, Link } from \"react-router-dom\";\r\nimport \"./selectedcountry.css\";\r\n\r\nconst SelectedCountry = (props) => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const name = location.state.name;\r\n  const database = location.state.database;\r\n\r\n  let index = database.findIndex((x) => x.name === name);\r\n\r\n  let currencies = database[index].currencies.map((curr) => {\r\n    return curr.name;\r\n  });\r\n\r\n  let languages = database[index].languages.map((lang) => {\r\n    return lang.name;\r\n  });\r\n\r\n  // Find index of border countries to convert abbreviations to full names\r\n  const hasBorders = database[index].hasOwnProperty(\"borders\"); //first, make sure there are bordering countries\r\n  let borderCountryIndices = [];\r\n  if (hasBorders) {\r\n    borderCountryIndices = database[index].borders.map((bc) => {\r\n      return database.findIndex((x) => {\r\n        return x.alpha3Code === bc;\r\n      });\r\n    });\r\n  }\r\n\r\n  //Convert border country indices to full names\r\n  let borderCountries = borderCountryIndices\r\n    .map((bc) => {\r\n      return database[bc].name;\r\n    });\r\n\r\n\r\n    return (\r\n    <div className=\"sc-container\">\r\n      <div className=\"go-back\" onClick={() => navigate(-1)}>\r\n      <i class=\"fa-solid fa-arrow-left\"></i><p>Back</p>\r\n      </div>\r\n      <div className=\"sc-container-country\">\r\n        <div className=\"sc-flag-container\">\r\n          <img src={database[index].flags.svg} alt=\"flag\" className=\"sc-flag\" />\r\n        </div>\r\n        <div className=\"sc-container-details\">\r\n          <h1 className=\"sc-name\">{name}</h1>\r\n          <div className=\"sc-details\">\r\n            <div className=\"sc-left-column\">\r\n              <p className=\"sc-native-name\"><span>Native Name: </span>{database[index].nativeName}</p>\r\n              <p className=\"sc-population\"><span>Population: </span>{database[index].population.toString()\r\n                  .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n              <p className=\"sc-region\"><span>Region: </span>{database[index].region}</p>\r\n              <p className=\"sc-sub-region\"><span>Sub Region: </span>{database[index].subRegion}</p>\r\n              <p className=\"sc-capital\"><span>Capital: </span>{database[index].capital}</p>\r\n            </div>\r\n            <div className=\"sc-right-column\">\r\n              <p className=\"sc-top-level-domain\">\r\n                <span>Top Level Domain: </span>{database[index].topLevelDomain}\r\n              </p>\r\n              <p className=\"sc-currencies\"><span>Currency(ies): </span>{currencies.join(\", \")}</p>\r\n              <p className=\"sc-languages\"><span>Language(s): </span>{languages.join(\", \")}</p>\r\n                        </div>\r\n            </div>\r\n          <div className=\"sc-border-countries\"><p className=\"bc-title\">Border Countries:</p>{borderCountries.map(each =>  <Link to=\"/selectedcountry\"\r\n              state={{ database: database, name: each }}><div className=\"each-border-country\" key={each}>{each}</div></Link>)}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectedCountry;\r\n","import React from \"react\";\n// import { findRenderedComponentWithType } from \"react-dom/test-utils\";\nimport \"./App.css\";\nimport Search from \"./components/search\";\nimport SelectedCountry from \"./components/selectedcountry\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\n\nconst App = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Search />} />\n        <Route path=\"/selectedcountry\" exact element={<SelectedCountry />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    \n    <header className=\"top-header\">\n      <div className=\"title\">\n        <a href=\"/\" className=\"title-text\">\n          Where in the world?\n        </a>\n      </div>\n      <div className=\"theme-container\">\n        <i class=\"fa-solid fa-moon\"></i>\n        <div className=\"mode\">Dark Mode</div>\n      </div>\n    </header>\n    <div className=\"container\">\n    <App />\n    </div>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}